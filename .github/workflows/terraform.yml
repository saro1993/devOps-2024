name: Deploy Terraform Infrastructure

on:
  push:
    branches:
      - main  
      - '**'  

jobs:
  terraform:
    runs-on: ubuntu-latest
    env:
      TF_VAR_region: eu-west-1  

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.9.8

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Create Lambda Zip Archive
        run: |
          cd infra-tr
          if [ ! -f "lambda_sqs.zip" ]; then
            echo "lambda_sqs.zip not found. Creating archive..."
            zip lambda_sqs.zip ../lambda_sqs.py
          fi

      - name: Initialize Terraform
        working-directory: infra-tr/sqs
        run: terraform init

      - name: Terraform Plan
        if: github.ref != 'refs/heads/main'
        working-directory: infra-tr/sqs
        run: terraform plan

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        working-directory: infra-tr
        run: terraform apply -auto-approve

      - name: Output SQS Queue URL
        id: output_sqs
        working-directory: infra-tr/sqs
        run: |
          sqs_url=$(terraform output -raw sqs_queue_url)
          echo "sqs_url=$sqs_url" >> $GITHUB_ENV  # Setter milj√∏variabel for senere bruk

      - name: Test SQS Queue
        if: github.ref == 'refs/heads/main'
        run: |
          echo "Testing SQS Queue URL: ${{ env.sqs_url }}"
          aws sqs send-message --queue-url "${{ env.sqs_url }}" --message-body "Test message"

      - name: Display SQS Queue URL
        if: github.ref == 'refs/heads/main'
        run: |
          echo "Your SQS Queue URL is: ${{ env.sqs_url }}"
